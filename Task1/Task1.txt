
burmus@Volodymyr MINGW64 ~ (master)
$ cd /d/
Display all 62 possibilities? (y or n)
$AV_ASW/                   ExternalLab/               Program Files/             logs/
$RECYCLE.BIN/              Final Project/             Python/                    msdia80.dll
58F05717C1E2               GIT/                       Recycle Bin.lnk            msdownld.tmp/
8adc60009e587301b7805f/    Games/                     Scala/                     sigame/
AIMP3/                     ITunes/                    Steam/                     test-rep/
AOMEI Partition Assistant/ IntelliJ IDEA 2022.1.3/    Sublime Text/              test-repos/
Brackets/                  Java/                      System Volume Information/ test-task2/
CCleaner/                  Java Projects/             Taask_1/                   test-task_2/
CLion 2022.2.4/            MSOCache/                  Task_1/                    webCoursework-main/
Cpp/                       MapData/                   Tasks/                     webappss/
DataBase/                  MobileSync/                The Cash Register WebApp/  Весілля/
DataGrip 2022.2/           Module 3/                  VS/                        Доки/
Document Themes 16/        OCaml64/                   WUDownloadCache/           Катюшка/
Downloads/                 Office16/                  WindowsApps/               Музмо/
DumpStack.log              PWR/                       WpSystem/
DumpStack.log.tmp          Paradygmaty/               burmu/

burmus@Volodymyr MINGW64 ~ (master)
$ cd /d/

burmus@Volodymyr MINGW64 /d
$ cd test-task_2

burmus@Volodymyr MINGW64 /d/test-task_2
$ cd Task_2

burmus@Volodymyr MINGW64 /d/test-task_2/Task_2 (git_2)
$ ls
third.txt

burmus@Volodymyr MINGW64 /d/test-task_2/Task_2 (git_2)
$ cd ..

burmus@Volodymyr MINGW64 /d/test-task_2
$ cd ..

burmus@Volodymyr MINGW64 /d
$ git clone https://github.com/vburmus/Task_2.git
Cloning into 'Task_2'...
warning: You appear to have cloned an empty repository.

burmus@Volodymyr MINGW64 /d
$ cd Task_2

burmus@Volodymyr MINGW64 /d/Task_2 (main)
$ touch README.md

burmus@Volodymyr MINGW64 /d/Task_2 (main)
$ vim README.md

[1]+  Stopped                 vim README.md

burmus@Volodymyr MINGW64 /d/Task_2 (main)
$ vim README.md

burmus@Volodymyr MINGW64 /d/Task_2 (main)
$ git add .
warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it

burmus@Volodymyr MINGW64 /d/Task_2 (main)
$ git commit -m "initial commit"
[main (root-commit) 745617b] initial commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.md

burmus@Volodymyr MINGW64 /d/Task_2 (main)
$ git checkout -b git_task
Switched to a new branch 'git_task'

burmus@Volodymyr MINGW64 /d/Task_2 (git_task)
$ git checkout -b git_1
Switched to a new branch 'git_1'


burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout  git_task
Switched to branch 'git_task'

burmus@Volodymyr MINGW64 /d/Task_2 (git_task)
$ git checkout -b git_2
Switched to a new branch 'git_2'

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git checkout  git_1
Switched to branch 'git_1'

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git push --all -u
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 226 bytes | 226.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/vburmus/Task_2.git
 * [new branch]      git_1 -> git_1
 * [new branch]      git_2 -> git_2
 * [new branch]      git_task -> git_task
 * [new branch]      main -> main
branch 'git_1' set up to track 'origin/git_1'.
branch 'git_2' set up to track 'origin/git_2'.
branch 'git_task' set up to track 'origin/git_task'.
branch 'main' set up to track 'origin/main'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ touch first.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ touch second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vim second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout  git_2
Switched to branch 'git_2'
Your branch is up to date with 'origin/git_2'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git merge git_1 --no-ff
Already up to date.

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ ls
README.md  first.txt  second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git checkout  git_1
Switched to branch 'git_1'
Your branch is up to date with 'origin/git_1'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git reflog
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{0}: checkout: moving from git_2 to git_1
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{1}: checkout: moving from git_1 to git_2
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{2}: checkout: moving from git_2 to git_1
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{3}: checkout: moving from git_task to git_2
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{4}: checkout: moving from git_1 to git_task
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{5}: checkout: moving from git_task to git_1
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{6}: checkout: moving from main to git_task
745617b (HEAD -> git_1, origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task, git_2) HEAD@{7}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git status
On branch git_1
Your branch is up to date with 'origin/git_1'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        first.txt
        second.txt

nothing added to commit but untracked files present (use "git add" to track)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git add .
warning: in the working copy of 'first.txt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'second.txt', LF will be replaced by CRLF the next time Git touches it

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git commit -m "2 files"
[git_1 a5294e0] 2 files
 2 files changed, 20 insertions(+)
 create mode 100644 first.txt
 create mode 100644 second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout  git_2
Switched to branch 'git_2'
Your branch is up to date with 'origin/git_2'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git merge git_1 --no-ff
Merge made by the 'ort' strategy.
 first.txt  | 10 ++++++++++
 second.txt | 10 ++++++++++
 2 files changed, 20 insertions(+)
 create mode 100644 first.txt
 create mode 100644 second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ vim second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit -m "AA"
[git_2 937a5f8] AA
 1 file changed, 2 insertions(+), 2 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git checkout  git_1
Switched to branch 'git_1'
Your branch is ahead of 'origin/git_1' by 1 commit.
  (use "git push" to publish your local commits)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vim second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git commit -m "BB"
[git_1 52da2c5] BB
 1 file changed, 2 insertions(+), 2 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git merge git_2 --no-ff
Auto-merging second.txt
CONFLICT (content): Merge conflict in second.txt
Automatic merge failed; fix conflicts and then commit the result.

burmus@Volodymyr MINGW64 /d/Task_2 (git_1|MERGING)
$ vim second.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1|MERGING)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_1|MERGING)
$ git commit -m "solved"
[git_1 4769d8f] solved

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git commit -m "CC"
[git_1 0f0a423] CC
 1 file changed, 2 insertions(+), 2 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git commit -m "DD"
[git_1 f997a56] DD
 1 file changed, 2 insertions(+), 2 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ get checkout git_2
bash: get: command not found

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout git_2
Switched to branch 'git_2'
Your branch is ahead of 'origin/git_2' by 3 commits.
  (use "git push" to publish your local commits)

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reflog
937a5f8 (HEAD -> git_2) HEAD@{0}: checkout: moving from git_1 to git_2
f997a56 (git_1) HEAD@{1}: commit: DD
0f0a423 HEAD@{2}: commit: CC
4769d8f HEAD@{3}: commit (merge): solved
52da2c5 HEAD@{4}: commit: BB
a5294e0 HEAD@{5}: checkout: moving from git_2 to git_1
937a5f8 (HEAD -> git_2) HEAD@{6}: commit: AA
f3f5974 HEAD@{7}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{8}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{9}: commit: 2 files
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{10}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{11}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{12}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{13}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{14}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{15}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{16}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{17}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git format-patch -1 0f0a423
0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git apply 0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git cherry-pick f997a56
error: Your local changes to the following files would be overwritten by merge:
        first.txt
Please commit your changes or stash them before you merge.
Aborting
fatal: cherry-pick failed

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git add .
warning: in the working copy of '0001-CC.patch', LF will be replaced by CRLF the next time Git touches it

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit -m "Format-patch"
[git_2 2423d18] Format-patch
 2 files changed, 26 insertions(+), 2 deletions(-)
 create mode 100644 0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git cherry-pick f997a56
[git_2 1804d81] DD
 Date: Tue Dec 6 15:18:27 2022 +0100
 1 file changed, 2 insertions(+), 2 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reflog
1804d81 (HEAD -> git_2) HEAD@{0}: cherry-pick: DD
2423d18 HEAD@{1}: commit: Format-patch
937a5f8 HEAD@{2}: checkout: moving from git_1 to git_2
f997a56 (git_1) HEAD@{3}: commit: DD
0f0a423 HEAD@{4}: commit: CC
4769d8f HEAD@{5}: commit (merge): solved
52da2c5 HEAD@{6}: commit: BB
a5294e0 HEAD@{7}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{8}: commit: AA
f3f5974 HEAD@{9}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{10}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{11}: commit: 2 files
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{12}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{13}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{14}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{15}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{16}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{17}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{18}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{19}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reset --soft HEAD~2

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git status
On branch git_2
Your branch is ahead of 'origin/git_2' by 3 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   0001-CC.patch
        modified:   first.txt


burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit -m "2 in 1"
[git_2 40fddae] 2 in 1
 2 files changed, 28 insertions(+), 4 deletions(-)
 create mode 100644 0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reflog
40fddae (HEAD -> git_2) HEAD@{0}: commit: 2 in 1
937a5f8 HEAD@{1}: reset: moving to HEAD~2
1804d81 HEAD@{2}: cherry-pick: DD
2423d18 HEAD@{3}: commit: Format-patch
937a5f8 HEAD@{4}: checkout: moving from git_1 to git_2
f997a56 (git_1) HEAD@{5}: commit: DD
0f0a423 HEAD@{6}: commit: CC
4769d8f HEAD@{7}: commit (merge): solved
52da2c5 HEAD@{8}: commit: BB
a5294e0 HEAD@{9}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{10}: commit: AA
f3f5974 HEAD@{11}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{12}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{13}: commit: 2 files
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{14}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{15}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{16}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{17}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{18}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{19}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{20}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{21}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git log
commit 40fddae8995ec9b50db7caedb167ed55322a22d7 (HEAD -> git_2)
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 16:52:13 2022 +0100

    2 in 1

commit 937a5f887a8585438ad853fcca51c6cc73f69fd9
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 15:14:00 2022 +0100

    AA

commit f3f5974ef7486bb6271fb77f23a7f5994001b803
Merge: 745617b a5294e0
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 15:12:47 2022 +0100

    Merge branch 'git_1' into git_2

commit a5294e0dd6372eead4d3140200af10f25366bcb6
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 15:12:37 2022 +0100

    2 files

commit 745617ba25f6d5dd70c0fe6c0c60811c5d7be221 (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task)
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 15:06:03 2022 +0100

    initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit --amend --author="Burmus <v@v.com>" --date=now
[git_2 b4fddf6] 2 in 1 changed date author
 Author: Burmus <v@v.com>
 Date: Tue Dec 6 17:07:56 2022 +0100
 2 files changed, 28 insertions(+), 4 deletions(-)
 create mode 100644 0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit --amend
[git_2 4b6f3d3] 2 in 1 changed date author
 Author: Burmus <v@v.com>
 Date: Tue Dec 6 17:07:56 2022 +0100
 2 files changed, 28 insertions(+), 4 deletions(-)
 create mode 100644 0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ touch third.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ vim third.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit --amend
[git_2 607676a] 2 in 1 changed date author
 Author: Burmus <v@v.com>
 Date: Tue Dec 6 17:07:56 2022 +0100
 2 files changed, 28 insertions(+), 4 deletions(-)
 create mode 100644 0001-CC.patch

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git add .
warning: in the working copy of 'third.txt', LF will be replaced by CRLF the next time Git touches it

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git commit --amend
[git_2 1a11572] 2 in 1 changed date author
 Author: Burmus <v@v.com>
 Date: Tue Dec 6 17:07:56 2022 +0100
 3 files changed, 38 insertions(+), 4 deletions(-)
 create mode 100644 0001-CC.patch
 create mode 100644 third.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reflog
1a11572 (HEAD -> git_2) HEAD@{0}: commit (amend): 2 in 1 changed date author
607676a HEAD@{1}: commit (amend): 2 in 1 changed date author
4b6f3d3 HEAD@{2}: commit (amend): 2 in 1 changed date author
b4fddf6 HEAD@{3}: commit (amend): 2 in 1 changed date author
40fddae HEAD@{4}: commit: 2 in 1
937a5f8 HEAD@{5}: reset: moving to HEAD~2
1804d81 HEAD@{6}: cherry-pick: DD
2423d18 HEAD@{7}: commit: Format-patch
937a5f8 HEAD@{8}: checkout: moving from git_1 to git_2
f997a56 (git_1) HEAD@{9}: commit: DD
0f0a423 HEAD@{10}: commit: CC
4769d8f HEAD@{11}: commit (merge): solved
52da2c5 HEAD@{12}: commit: BB
a5294e0 HEAD@{13}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{14}: commit: AA
f3f5974 HEAD@{15}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{16}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{17}: commit: 2 files
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{18}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{19}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{20}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{21}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{22}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{23}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{24}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{25}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ ^C

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git revert 1a11572
[git_2 7a57a38] Revert "2 in 1 changed date author"
 3 files changed, 4 insertions(+), 38 deletions(-)
 delete mode 100644 0001-CC.patch
 delete mode 100644 third.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reflog
7a57a38 (HEAD -> git_2) HEAD@{0}: revert: Revert "2 in 1 changed date author"
1a11572 HEAD@{1}: commit (amend): 2 in 1 changed date author
607676a HEAD@{2}: commit (amend): 2 in 1 changed date author
4b6f3d3 HEAD@{3}: commit (amend): 2 in 1 changed date author
b4fddf6 HEAD@{4}: commit (amend): 2 in 1 changed date author
40fddae HEAD@{5}: commit: 2 in 1
937a5f8 HEAD@{6}: reset: moving to HEAD~2
1804d81 HEAD@{7}: cherry-pick: DD
2423d18 HEAD@{8}: commit: Format-patch
937a5f8 HEAD@{9}: checkout: moving from git_1 to git_2
f997a56 (git_1) HEAD@{10}: commit: DD
0f0a423 HEAD@{11}: commit: CC
4769d8f HEAD@{12}: commit (merge): solved
52da2c5 HEAD@{13}: commit: BB
a5294e0 HEAD@{14}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{15}: commit: AA
f3f5974 HEAD@{16}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{17}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{18}: commit: 2 files
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{19}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{20}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{21}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{22}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{23}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{24}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{25}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{26}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ touch third.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git add .  && git commit -m "add third.txt"
[git_2 5d08e24] add third.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 third.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$  git reset --hard HEAD~2
HEAD is now at 1a11572 2 in 1 changed date author

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git reflog
1a11572 (HEAD -> git_2) HEAD@{0}: reset: moving to HEAD~2
5d08e24 HEAD@{1}: commit: add third.txt
7a57a38 HEAD@{2}: revert: Revert "2 in 1 changed date author"
1a11572 (HEAD -> git_2) HEAD@{3}: commit (amend): 2 in 1 changed date author
607676a HEAD@{4}: commit (amend): 2 in 1 changed date author
4b6f3d3 HEAD@{5}: commit (amend): 2 in 1 changed date author
b4fddf6 HEAD@{6}: commit (amend): 2 in 1 changed date author
40fddae HEAD@{7}: commit: 2 in 1
937a5f8 HEAD@{8}: reset: moving to HEAD~2
1804d81 HEAD@{9}: cherry-pick: DD
2423d18 HEAD@{10}: commit: Format-patch
937a5f8 HEAD@{11}: checkout: moving from git_1 to git_2
f997a56 (git_1) HEAD@{12}: commit: DD
0f0a423 HEAD@{13}: commit: CC
4769d8f HEAD@{14}: commit (merge): solved
52da2c5 HEAD@{15}: commit: BB
a5294e0 HEAD@{16}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{17}: commit: AA
f3f5974 HEAD@{18}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{19}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{20}: commit: 2 files
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{21}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{22}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{23}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{24}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{25}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{26}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{27}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, origin/git_2, origin/git_1, main, git_task) HEAD@{28}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git push --all -u
Enumerating objects: 24, done.
Counting objects: 100% (24/24), done.
Delta compression using up to 8 threads
Compressing objects: 100% (16/16), done.
Writing objects: 100% (23/23), 2.05 KiB | 1.02 MiB/s, done.
Total 23 (delta 6), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (6/6), done.
To https://github.com/vburmus/Task_2.git
   745617b..f997a56  git_1 -> git_1
   745617b..1a11572  git_2 -> git_2
branch 'git_1' set up to track 'origin/git_1'.
branch 'git_2' set up to track 'origin/git_2'.
branch 'git_task' set up to track 'origin/git_task'.
branch 'main' set up to track 'origin/main'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_2)
$ git checkout git_1
Switched to branch 'git_1'
Your branch is up to date with 'origin/git_1'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git push --all -u
Everything up-to-date
branch 'git_1' set up to track 'origin/git_1'.
branch 'git_2' set up to track 'origin/git_2'.
branch 'git_task' set up to track 'origin/git_task'.
branch 'main' set up to track 'origin/main'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ cd ..

burmus@Volodymyr MINGW64 /d
$ mkdir Task2_2

burmus@Volodymyr MINGW64 /d
$ cd Task2_2

burmus@Volodymyr MINGW64 /d/Task2_2
$ git clone https://github.com/vburmus/Task_2.git
Cloning into 'Task_2'...
remote: Enumerating objects: 26, done.
remote: Counting objects: 100% (26/26), done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 26 (delta 6), reused 26 (delta 6), pack-reused 0
Receiving objects: 100% (26/26), done.
Resolving deltas: 100% (6/6), done.

burmus@Volodymyr MINGW64 /d/Task2_2
$ cd Task_2

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (main)
$ git show-branch
[main] initial commit

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (main)
$ git checkout git_2
Switched to a new branch 'git_2'
branch 'git_2' set up to track 'origin/git_2'.

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_2)
$ git checkout git_1
Switched to a new branch 'git_1'
branch 'git_1' set up to track 'origin/git_1'.

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git add . && git commit -m "full first"
[git_1 a5c92ea] full first
 1 file changed, 6 insertions(+), 6 deletions(-)

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 315 bytes | 315.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/vburmus/Task_2.git
   f997a56..a5c92ea  git_1 -> git_1

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ ls
README.md  first.txt  second.txt

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git status
On branch git_1
Your branch is up to date with 'origin/git_1'.

nothing to commit, working tree clean

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ cd ../..

burmus@Volodymyr MINGW64 /d
$ cd Task_2/


burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ пше куадщп
bash: пше: command not found

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git reflog
f997a56 (HEAD -> git_1, origin/git_1) HEAD@{0}: checkout: moving from git_2 to git_1
1a11572 (origin/git_2, git_2) HEAD@{1}: reset: moving to HEAD~2
5d08e24 HEAD@{2}: commit: add third.txt
7a57a38 HEAD@{3}: revert: Revert "2 in 1 changed date author"
1a11572 (origin/git_2, git_2) HEAD@{4}: commit (amend): 2 in 1 changed date author
607676a HEAD@{5}: commit (amend): 2 in 1 changed date author
4b6f3d3 HEAD@{6}: commit (amend): 2 in 1 changed date author
b4fddf6 HEAD@{7}: commit (amend): 2 in 1 changed date author
40fddae HEAD@{8}: commit: 2 in 1
937a5f8 HEAD@{9}: reset: moving to HEAD~2
1804d81 HEAD@{10}: cherry-pick: DD
2423d18 HEAD@{11}: commit: Format-patch
937a5f8 HEAD@{12}: checkout: moving from git_1 to git_2
f997a56 (HEAD -> git_1, origin/git_1) HEAD@{13}: commit: DD
0f0a423 HEAD@{14}: commit: CC
4769d8f HEAD@{15}: commit (merge): solved
52da2c5 HEAD@{16}: commit: BB
a5294e0 HEAD@{17}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{18}: commit: AA
f3f5974 HEAD@{19}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, main, git_task) HEAD@{20}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{21}: commit: 2 files
745617b (origin/main, origin/git_task, main, git_task) HEAD@{22}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{23}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, main, git_task) HEAD@{24}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{25}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, main, git_task) HEAD@{26}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, main, git_task) HEAD@{27}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{28}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, main, git_task) HEAD@{29}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ cd ..

burmus@Volodymyr MINGW64 /d
$ cd Task 2_2/Task_2
bash: cd: too many arguments

burmus@Volodymyr MINGW64 /d
$ cd Task 2_2/Task_2/
bash: cd: too many arguments

burmus@Volodymyr MINGW64 /d
$ cd /Task 2_2/Task_2/
bash: cd: too many arguments

burmus@Volodymyr MINGW64 /d
$ cd Task2_2/Task_2/

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git status
On branch git_1
Your branch is up to date with 'origin/git_1'.

nothing to commit, working tree clean

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git reflog
a5c92ea (HEAD -> git_1, origin/git_1) HEAD@{0}: commit: full first
f997a56 HEAD@{1}: checkout: moving from git_2 to git_1
1a11572 (origin/git_2, git_2) HEAD@{2}: checkout: moving from main to git_2
745617b (origin/main, origin/git_task, origin/HEAD, main) HEAD@{3}: clone: from https://github.com/vburmus/Task_2.git

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ vim first.txt

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git commit --amend
[git_1 976c73b] nofull first
 Date: Tue Dec 6 17:30:38 2022 +0100
 1 file changed, 6 insertions(+), 6 deletions(-)

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ git reflog
976c73b (HEAD -> git_1) HEAD@{0}: commit (amend): nofull first
a5c92ea (origin/git_1) HEAD@{1}: commit: full first
f997a56 HEAD@{2}: checkout: moving from git_2 to git_1
1a11572 (origin/git_2, git_2) HEAD@{3}: checkout: moving from main to git_2
745617b (origin/main, origin/git_task, origin/HEAD, main) HEAD@{4}: clone: from https://github.com/vburmus/Task_2.git

burmus@Volodymyr MINGW64 /d/Task2_2/Task_2 (git_1)
$ cd ../..

burmus@Volodymyr MINGW64 /d
$ cd Task_2

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git pull
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 295 bytes | 49.00 KiB/s, done.
From https://github.com/vburmus/Task_2
   f997a56..a5c92ea  git_1      -> origin/git_1
error: Your local changes to the following files would be overwritten by merge:
        first.txt
Please commit your changes or stash them before you merge.
Aborting
Updating f997a56..a5c92ea

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git status
On branch git_1
Your branch is behind 'origin/git_1' by 1 commit, and can be fast-forwarded.
  (use "git pull" to update your local branch)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   first.txt

no changes added to commit (use "git add" and/or "git commit -a")

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git stash save "ff"
Saved working directory and index state On git_1: ff

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git status
On branch git_1
Your branch is behind 'origin/git_1' by 1 commit, and can be fast-forwarded.
  (use "git pull" to update your local branch)

nothing to commit, working tree clean

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git pull
Updating f997a56..a5c92ea
Fast-forward
 first.txt | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ vi first.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git push
Everything up-to-date

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git stash apply stash
Auto-merging first.txt
On branch git_1
Your branch is up to date with 'origin/git_1'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   first.txt

no changes added to commit (use "git add" and/or "git commit -a")

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout git_task
error: Your local changes to the following files would be overwritten by checkout:
        first.txt
Please commit your changes or stash them before you switch branches.
Aborting

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git add .

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout git_task
error: Your local changes to the following files would be overwritten by checkout:
        first.txt
Please commit your changes or stash them before you switch branches.
Aborting

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git commit -m "last"
[git_1 6cc3ced] last
 1 file changed, 2 insertions(+), 2 deletions(-)

burmus@Volodymyr MINGW64 /d/Task_2 (git_1)
$ git checkout git_task
Switched to branch 'git_task'
Your branch is up to date with 'origin/git_task'.

burmus@Volodymyr MINGW64 /d/Task_2 (git_task)
$ git checkout -b git_3
Switched to a new branch 'git_3'

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ touch doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git add . && git commit -m "doubtingFile.txt"
[git_3 7d8aed8] doubtingFile.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ vim doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git add . && git commit -m "2"
warning: in the working copy of 'doubtingFile.txt', LF will be replaced by CRLF the next time Git touches it
[git_3 c935da7] 2
 1 file changed, 1 insertion(+)

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ vim doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git add . && git commit -m "3"
warning: in the working copy of 'doubtingFile.txt', LF will be replaced by CRLF the next time Git touches it
[git_3 30caeac] 3
 1 file changed, 1 insertion(+)

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ vim doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git add . && git commit -m "4"
warning: in the working copy of 'doubtingFile.txt', LF will be replaced by CRLF the next time Git touches it
[git_3 b0270be] 4
 1 file changed, 1 insertion(+)

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ vim doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git add . && git commit -m "5"
warning: in the working copy of 'doubtingFile.txt', LF will be replaced by CRLF the next time Git touches it
[git_3 75d6ceb] 5
 1 file changed, 1 insertion(+)

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ vim doubtingFile.txt

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git add . && git commit -m "6"
warning: in the working copy of 'doubtingFile.txt', LF will be replaced by CRLF the next time Git touches it
[git_3 b355ab5] 6
 1 file changed, 1 insertion(+)

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git log
commit b355ab5415f1aaf3417a304409817a756d1497d8 (HEAD -> git_3)
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 20:12:25 2022 +0100

    6

commit 75d6ceb7b3b6daafc4c321e3815dff9f5b4101f7
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 20:12:11 2022 +0100

    5

commit b0270beeabe91428e78a577471cc476e510544ee
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 20:11:56 2022 +0100

    4

commit 30caeac78ea47df788c59371fe1f5babbb28c979
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 20:11:42 2022 +0100

    3

commit c935da7b167fbc2a905427af7962ec318d0c43fe
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 20:11:27 2022 +0100

    2

commit 7d8aed84261ef6563a869606e5406bfa0f5c910b
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 19:18:32 2022 +0100

    doubtingFile.txt

commit 745617ba25f6d5dd70c0fe6c0c60811c5d7be221 (origin/main, origin/git_task, main, git_task)
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 15:06:03 2022 +0100

    initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ ^C

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git reflog
b355ab5 (HEAD -> git_3) HEAD@{0}: commit: 6
75d6ceb HEAD@{1}: commit: 5
b0270be HEAD@{2}: commit: 4
30caeac HEAD@{3}: commit: 3
c935da7 HEAD@{4}: commit: 2
7d8aed8 HEAD@{5}: commit: doubtingFile.txt
745617b (origin/main, origin/git_task, main, git_task) HEAD@{6}: checkout: moving from git_task to git_3
745617b (origin/main, origin/git_task, main, git_task) HEAD@{7}: checkout: moving from git_1 to git_task
6cc3ced (git_1) HEAD@{8}: commit: last
a5c92ea (origin/git_1) HEAD@{9}: pull: Fast-forward
f997a56 HEAD@{10}: reset: moving to HEAD
f997a56 HEAD@{11}: checkout: moving from git_2 to git_1
1a11572 (origin/git_2, git_2) HEAD@{12}: reset: moving to HEAD~2
5d08e24 HEAD@{13}: commit: add third.txt
7a57a38 HEAD@{14}: revert: Revert "2 in 1 changed date author"
1a11572 (origin/git_2, git_2) HEAD@{15}: commit (amend): 2 in 1 changed date author
607676a HEAD@{16}: commit (amend): 2 in 1 changed date author
4b6f3d3 HEAD@{17}: commit (amend): 2 in 1 changed date author
b4fddf6 HEAD@{18}: commit (amend): 2 in 1 changed date author
40fddae HEAD@{19}: commit: 2 in 1
937a5f8 HEAD@{20}: reset: moving to HEAD~2
1804d81 HEAD@{21}: cherry-pick: DD
2423d18 HEAD@{22}: commit: Format-patch
937a5f8 HEAD@{23}: checkout: moving from git_1 to git_2
f997a56 HEAD@{24}: commit: DD
0f0a423 HEAD@{25}: commit: CC
4769d8f HEAD@{26}: commit (merge): solved
52da2c5 HEAD@{27}: commit: BB
a5294e0 HEAD@{28}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{29}: commit: AA
f3f5974 HEAD@{30}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, main, git_task) HEAD@{31}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{32}: commit: 2 files
745617b (origin/main, origin/git_task, main, git_task) HEAD@{33}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{34}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, main, git_task) HEAD@{35}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{36}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, main, git_task) HEAD@{37}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, main, git_task) HEAD@{38}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{39}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, main, git_task) HEAD@{40}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git rebase -i HEAD~5
[detached HEAD 92b971f] 2
 Date: Tue Dec 6 20:11:27 2022 +0100
 1 file changed, 5 insertions(+)
Successfully rebased and updated refs/heads/git_3.

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git log
commit 92b971f8c735c2ec95312074419e464d4c4b684c (HEAD -> git_3)
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 20:11:27 2022 +0100

    2

    3

    4

    5

    6

commit 7d8aed84261ef6563a869606e5406bfa0f5c910b
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 19:18:32 2022 +0100

    doubtingFile.txt

commit 745617ba25f6d5dd70c0fe6c0c60811c5d7be221 (origin/main, origin/git_task, main, git_task)
Author: vburmus <269545@student.pwr.edu.pl>
Date:   Tue Dec 6 15:06:03 2022 +0100

    initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$ git reflog
92b971f (HEAD -> git_3) HEAD@{0}: rebase (finish): returning to refs/heads/git_3
92b971f (HEAD -> git_3) HEAD@{1}: rebase (squash): 2
007b9ee HEAD@{2}: rebase (squash): # This is a combination of 4 commits.
c096594 HEAD@{3}: rebase (squash): # This is a combination of 3 commits.
cce2c3c HEAD@{4}: rebase (squash): # This is a combination of 2 commits.
c935da7 HEAD@{5}: rebase (start): checkout HEAD~5
b355ab5 HEAD@{6}: commit: 6
75d6ceb HEAD@{7}: commit: 5
b0270be HEAD@{8}: commit: 4
30caeac HEAD@{9}: commit: 3
c935da7 HEAD@{10}: commit: 2
7d8aed8 HEAD@{11}: commit: doubtingFile.txt
745617b (origin/main, origin/git_task, main, git_task) HEAD@{12}: checkout: moving from git_task to git_3
745617b (origin/main, origin/git_task, main, git_task) HEAD@{13}: checkout: moving from git_1 to git_task
6cc3ced (git_1) HEAD@{14}: commit: last
a5c92ea (origin/git_1) HEAD@{15}: pull: Fast-forward
f997a56 HEAD@{16}: reset: moving to HEAD
f997a56 HEAD@{17}: checkout: moving from git_2 to git_1
1a11572 (origin/git_2, git_2) HEAD@{18}: reset: moving to HEAD~2
5d08e24 HEAD@{19}: commit: add third.txt
7a57a38 HEAD@{20}: revert: Revert "2 in 1 changed date author"
1a11572 (origin/git_2, git_2) HEAD@{21}: commit (amend): 2 in 1 changed date author
607676a HEAD@{22}: commit (amend): 2 in 1 changed date author
4b6f3d3 HEAD@{23}: commit (amend): 2 in 1 changed date author
b4fddf6 HEAD@{24}: commit (amend): 2 in 1 changed date author
40fddae HEAD@{25}: commit: 2 in 1
937a5f8 HEAD@{26}: reset: moving to HEAD~2
1804d81 HEAD@{27}: cherry-pick: DD
2423d18 HEAD@{28}: commit: Format-patch
937a5f8 HEAD@{29}: checkout: moving from git_1 to git_2
f997a56 HEAD@{30}: commit: DD
0f0a423 HEAD@{31}: commit: CC
4769d8f HEAD@{32}: commit (merge): solved
52da2c5 HEAD@{33}: commit: BB
a5294e0 HEAD@{34}: checkout: moving from git_2 to git_1
937a5f8 HEAD@{35}: commit: AA
f3f5974 HEAD@{36}: merge git_1: Merge made by the 'ort' strategy.
745617b (origin/main, origin/git_task, main, git_task) HEAD@{37}: checkout: moving from git_1 to git_2
a5294e0 HEAD@{38}: commit: 2 files
745617b (origin/main, origin/git_task, main, git_task) HEAD@{39}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{40}: checkout: moving from git_1 to git_2
745617b (origin/main, origin/git_task, main, git_task) HEAD@{41}: checkout: moving from git_2 to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{42}: checkout: moving from git_task to git_2
745617b (origin/main, origin/git_task, main, git_task) HEAD@{43}: checkout: moving from git_1 to git_task
745617b (origin/main, origin/git_task, main, git_task) HEAD@{44}: checkout: moving from git_task to git_1
745617b (origin/main, origin/git_task, main, git_task) HEAD@{45}: checkout: moving from main to git_task
745617b (origin/main, origin/git_task, main, git_task) HEAD@{46}: commit (initial): initial commit

burmus@Volodymyr MINGW64 /d/Task_2 (git_3)
$
